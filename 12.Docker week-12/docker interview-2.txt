Docker interview questions
-------------------------------------------------------------------------------------------------------------------------
1.What is docker?
ANS-Docker is a tool it simplifies the process of building, shipping, and running applications by using containerization technology to create lightweight and portable environments

2.What is difference between vm's and docker?
ANS-A VM lets you run a virtual machine on any hardware. Docker lets you run an application on any operating system. It uses isolated user-space instances known as containers. Docker containers have their own file system, dependency structure, processes, and network capabilities.

3.What is dockerfile?
ANS-A Dockerfile is a script used to build Docker images. It contains a set of instructions that specify the steps to create a Docker image for a particular application or service. Docker images are the portable, executable packages that include an application and its dependencies, along with configuration settings.

4.What is difference between the kill and stop?
ANS-Docker Stop-Use docker stop when you want to give the container's main process an opportunity to gracefully shut down within a specified timeout.
                cmd-docker stop <container_name_or_id>
   Docker kill-Use docker kill when you need to forcefully and immediately terminate the container without waiting for any cleanup operations.
               cmd-docker kill <container_name_or_id>

5.What is difference between the add and copy commands in a dockerfile?
ANS-COPY Instruction:
       The COPY instruction is simpler and more straightforward. It copies files or directories from the host machine to the specified destination in the image.
       It is recommended for most use cases where you only need to copy local files into the image.
ADD Instruction:
The ADD instruction, in addition to copying files, also has some extra features. It can also fetch remote URLs and extract compressed archives (e.g., tar or zip) directly into the destination in the image

6.What is difference between the cmd and entrypoint?
ANS- CMD and ENTRYPOINT are used to define the default command to run when a container starts, CMD provides default arguments that can be overridden when you provide an argument, whereas ENTRYPOINT specifies the default executable and cannot be overridden directly.

7.Which is the base image you will prefer your docker file? -alpine
ANS-You can use Docker's reserved, minimal image, scratch , as a starting point for building containers. Using the scratch "image" signals to the build process that you want the next command in the Dockerfile to be the first filesystem layer in your image.

8.How to login a running container?
ANS-using docker attach container_name 
or docker run exec -it container_id bin/bash command

9.How to check live logs in docker containers? -docker logs--follow
ANS-
10.How to check no.of containers running your machine? -docker ps
ANS- docker ps

11.How to  check stop and running containers?
ANS- docker ps-a
12.What is port forwarding?
ANS-Port forwarding is a crucial method for Docker that allows you to expose container ports to the outside world. It enables you to run apps in a separate environment while keeping them accessible. -p 8181:9090

13.How to run a container in background?
ANS-By using detach keys -d

14.What is the first line in a docker file? 
ANS- FROM Instruction

15.What are the commands have you used in your docker file? -FROM RUN CMD ENTRYPOINT LABEL WORKDIRECTORY COPY ADD EXPOSE VOLUME 
ANS-FROM, RUN, CMD, ENTRYPOINT, LABEL, WORKDIRECTORY, COPY, ADD, EXPOSE, VOLUME

16.What is label in docker?
ANS- label is a key-value pair used to add metadata to containers, images, volumes, networks, and other Docker objects. They are useful for organization, automation, and identifying attributes of Docker resources

17.How you store data persistently?
ANS- -VOLUMES
18.What is docker tag?
ANS-Docker tag is a label applied to Docker images. It helps identify specific versions or variants of an image, such as versions, builds, or intended purposes

19.Have you worked on docker volumes?
ANS-Yes, I have idea in docker volumes. They are used to persist data generated by and used by Docker containers, providing a way to store and share data between containers and the host machine

20.What is docker network?
ANS-Docker networking allows you to attach a container to as many networks as you like. You can also attach an already running container. Go ahead and attach your running web app to the my_bridge .

21.I have a one web application is running in one container and database is running in one container how you can communicate these two?
ANS-Docker network

22.Where you are store docker images? 
ANS- registry2 docker hub

23.How to run multiple containers at a time?
ANS-use Docker Compose, a tool for defining and running multi-container Docker applications.  define our services, networks, and volumes in a docker-compose.yml file, and then use the docker-compose up command to start all containers defined in that file. 
-docker-compose
container 1
docker run --volumes-from container1 --name container2
